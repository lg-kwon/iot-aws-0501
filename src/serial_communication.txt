// #include <Arduino.h>
// #include <MQTTClient.h>         // Need to add library 256dpi/MQTT

#include "serial_communication.h"



// Define your serial write function here
void send_serial_data(const char *data) {
    // Implementation of serial write function
    printf("json data = %s\n", data);
    // Your serial write logic goes here
    // Example: serial_write_function(data);
    // For demonstration, I'm just printing the data here
}

// Function to send power command to OZS board
void send_power_ozs(const char *power) {
    printf("send power cmd\n");

    if (strcmp(power, "on") == 0) {
        send_serial_data("{power:on:}");
    } else if (strcmp(power, "off") == 0) {
        send_serial_data("{power:off:}");
    }

    send_serial_data("{start:act:}");
}

// Function to send stop command to OZS board
void send_stop_ozs() {
    printf("send stop cmd\n");

    send_serial_data("{stop:on:}");
    send_serial_data("{start:act:}");
}

// Function to send start command to OZS with data
void send_start_ozs(int action, int duration, int wind_speed) {
    printf("start :\n");
    printf("action = %d\n", action);
    printf("time = %d\n", duration);
    printf("wind = %d\n", wind_speed);

    // Power on transmission
    send_serial_data("{power:on:}");

    // Mode transmission
    if (action == 1) {
        send_serial_data("{mode:1:}");
    } else if (action == 2) {
        send_serial_data("{mode:2:}");
    } else if (action == 3) {
        send_serial_data("{mode:3:}");
    } else {
        printf("Invalid action command: %d\n", action);
    }

    // Wind strength transmission
    if (wind_speed == 1) {
        send_serial_data("{wind:1:}");
    } else if (wind_speed == 2) {
        send_serial_data("{wind:2:}");
    } else if (wind_speed == 3) {
        send_serial_data("{wind:3:}");
    } else {
        printf("Invalid wind speed command: %d\n", wind_speed);
    }

    // Time duration
    if (duration == 1) {
        send_serial_data("{duration:30:}");
    } else if (duration == 2) {
        send_serial_data("{duration:60:}");
    } else if (duration == 3) {
        send_serial_data("{duration:90:}");
    } else {
        printf("Invalid duration command: %d\n", duration);
    }

    // Start OZS
    send_serial_data("{start:act:}");
}


// Callback when the subscribed topic receives a message
void on_message_received(String *topic, String *payload) {
    printf("Received message from topic '%s': %s\n", topic, payload);

    // Parse JSON payload
    // You may need to use a JSON parsing library for C here
    // Example: cJSON, jansson, etc.
    // For demonstration, I'm directly accessing fields from payload
    int action, duration, wind_speed;
    sscanf(payload, "{\"action\": %d, \"duration\": %d, \"wind\": %d}", &action, &duration, &wind_speed);

    printf("action = %d, duration = %d, wind_speed = %d\n", action, duration, wind_speed);

    // Handle different commands
    if (strstr(payload, "\"power\"")) {
        send_power_ozs(payload);
    } else if (strstr(payload, "\"stop\"")) {
        send_stop_ozs();
    } else if (strstr(payload, "\"start\"")) {
        send_start_ozs(action, duration, wind_speed);
    } else {
        printf("Key not found in data\n");
    }
}
